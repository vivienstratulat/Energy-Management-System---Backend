plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}


group = 'com.sd'
version = '0.0.1-SNAPSHOT'
java.setSourceCompatibility(JavaVersion.VERSION_17)

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

compileJava {
	sourceCompatibility = 17
	targetCompatibility = 17
}

repositories {
	mavenCentral()

}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}



tasks.named('test') {
	useJUnitPlatform()
}

task checkJavaVersion {
	doLast {
		def javaVersion = JavaVersion.current()
		println "Java Version: " + javaVersion.toString()
	}
}

check.dependsOn checkJavaVersion

